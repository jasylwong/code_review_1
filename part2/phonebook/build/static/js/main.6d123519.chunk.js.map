{"version":3,"sources":["services/persons.js","components/Notification.js","components/Filter.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["url","axios","get","person","post","delete","id","put","Notification","notification","console","log","type","className","message","Filter","newFilter","onChange","value","PersonForm","onSubmit","newName","onNameChange","newNumber","onNumberChange","Persons","persons","onClick","map","i","key","name","number","App","useState","setPersons","setNewName","setNewNumber","filterString","setFilterString","setNotification","useEffect","personService","then","response","data","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","includes","e","target","preventDefault","currentPerson","find","window","confirm","updatedPerson","newPersons","addedPerson","concat","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d123519.chunk.js","sourcesContent":["import axios from 'axios';\nconst url = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(url)\n}\n\nconst create = (person) => {\n  return axios.post(url, person)\n}\n\nconst remove = (person) => {\n  return axios.delete(`${url}/${person.id}`)\n}\n\nconst update = (person) => {\n  return axios.put(`${url}/${person.id}`, person)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n  console.log(notification.type)\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react';\n\nconst Filter = ({ newFilter, onChange }) => {\n  return (\n    <div>filter shown with <input value={newFilter} onChange={onChange}/></div>\n  )\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = ({ onSubmit, newName, onNameChange, newNumber, onNumberChange }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={newName} onChange={onNameChange}/>\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={onNumberChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Persons = ({ persons, onClick }) => {\n  return (\n    <div>\n      {\n        persons.map((person, i) => {\n          return (\n            <div key={i}>\n              {`${person.name} ${person.number} `}\n              <button onClick={() => onClick(person)}>delete</button>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default Persons;","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport './App.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setFilterString ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 4000)\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFilterStringChange = (e) => {\n    setFilterString(e.target.value)\n  }\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(person)\n        .then(response => {\n          const newPersons = persons.filter(p => p.id !== person.id)\n          setPersons(newPersons)\n          notifyWith(`${person.name} was deleted successfully.`)\n        })\n        .catch(() => {\n          setPersons(persons.filter(p => p.id !== person.id))\n          notifyWith(`${person.name} had already been removed`, 'error')\n        })\n    }\n  }\n\n  const addPerson = (e) => {\n    e.preventDefault()\n    const currentPerson = persons.find(p => p.name === newName)\n    if (currentPerson) {\n      if (window.confirm(`${newName} is already added; replace the old number?`)) {\n        const updatedPerson = { ...currentPerson, number: newNumber }\n        personService.update(updatedPerson)\n          .then(response => {\n            const newPersons = persons.map(p => p.id !== updatedPerson.id ? p : updatedPerson)\n            setPersons(newPersons)\n            notifyWith(`Changed number of ${currentPerson.name}`)\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    } else {\n      personService.create({ name: newName, number: newNumber })\n      .then(addedPerson => {\n        const newPersons = persons.concat(addedPerson.data)\n        setPersons(newPersons)\n        setNewName('')\n        setNewNumber('')\n        notifyWith(`Added ${newName}`)\n      })\n      .catch(error => {\n        console.log(error.response.data.error)\n        notifyWith(`${error.response.data.error} `, 'error')\n      })\n    }\n  }\n\n  const personsToShow = filterString.length === 0 ?\n    persons : \n    persons.filter(p => p.name.toLowerCase().includes(filterString.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter newFilter={filterString} onChange={handleFilterStringChange} />\n      <h2>Add a new contact</h2>\n      <PersonForm \n        onSubmit={addPerson}\n        newName={newName}\n        onNameChange={handleNameChange}\n        newNumber={newNumber}\n        onNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} onClick={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}